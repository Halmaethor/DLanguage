package net.masterthought.dlanguage.psi;

import com.intellij.psi.tree.IElementType;
import ddt.dtool.parser.DeeTokens;

import java.util.HashMap;

public class DeeTokenToIElement {

    public static IElementType findToken(DeeTokens token) {
        HashMap<DeeTokens, IElementType> tokens = new HashMap<DeeTokens, IElementType>();
        tokens.put(DeeTokens.AND, DLanguageTypes.AND);
        tokens.put(DeeTokens.AND_ASSIGN, DLanguageTypes.AND_ASSIGN);
        tokens.put(DeeTokens.ASSIGN, DLanguageTypes.ASSIGN);
        tokens.put(DeeTokens.AT, DLanguageTypes.AT);
        tokens.put(DeeTokens.CHARACTER, DLanguageTypes.CHARACTER);
        tokens.put(DeeTokens.CLOSE_BRACE, DLanguageTypes.CLOSE_BRACE);
        tokens.put(DeeTokens.CLOSE_BRACKET, DLanguageTypes.CLOSE_BRACKET);
        tokens.put(DeeTokens.CLOSE_PARENS, DLanguageTypes.CLOSE_PARENS);
        tokens.put(DeeTokens.COLON, DLanguageTypes.COLON);
        tokens.put(DeeTokens.COMMA, DLanguageTypes.COMMA);
        tokens.put(DeeTokens.COMMENT_LINE, DLanguageTypes.COMMENT_LINE);
        tokens.put(DeeTokens.COMMENT_MULTI, DLanguageTypes.COMMENT_MULTI);
        tokens.put(DeeTokens.COMMENT_NESTED, DLanguageTypes.COMMENT_NESTED);
        tokens.put(DeeTokens.CONCAT, DLanguageTypes.CONCAT);
        tokens.put(DeeTokens.CONCAT_ASSIGN, DLanguageTypes.CONCAT_ASSIGN);
        tokens.put(DeeTokens.DECREMENT, DLanguageTypes.DECREMENT);
        tokens.put(DeeTokens.DIV, DLanguageTypes.DIV);
        tokens.put(DeeTokens.DIV_ASSIGN, DLanguageTypes.DIV_ASSIGN);
        tokens.put(DeeTokens.DOCCOMMENT_LINE, DLanguageTypes.DOCCOMMENT_LINE);
        tokens.put(DeeTokens.DOCCOMMENT_MULTI, DLanguageTypes.DOCCOMMENT_MULTI);
        tokens.put(DeeTokens.DOCCOMMENT_NESTED, DLanguageTypes.DOCCOMMENT_NESTED);
        tokens.put(DeeTokens.DOLLAR, DLanguageTypes.DOLLAR);
        tokens.put(DeeTokens.DOT, DLanguageTypes.DOT);
        tokens.put(DeeTokens.DOUBLE_DOT, DLanguageTypes.DOUBLE_DOT);
        tokens.put(DeeTokens.EOF, DLanguageTypes.EOF);
        tokens.put(DeeTokens.EQUALS, DLanguageTypes.EQUALS);
        tokens.put(DeeTokens.FLOAT_DECIMAL, DLanguageTypes.FLOAT_DECIMAL);
        tokens.put(DeeTokens.FLOAT_HEX, DLanguageTypes.FLOAT_HEX);
        tokens.put(DeeTokens.GREATER_EQUAL, DLanguageTypes.GREATER_EQUAL);
        tokens.put(DeeTokens.GREATER_THAN, DLanguageTypes.GREATER_THAN);
        tokens.put(DeeTokens.GROUP_COMMENT, DLanguageTypes.GROUP_COMMENT);
        tokens.put(DeeTokens.GROUP_FLOAT, DLanguageTypes.GROUP_FLOAT);
        tokens.put(DeeTokens.GROUP_INTEGER, DLanguageTypes.GROUP_INTEGER);
        tokens.put(DeeTokens.GROUP_STRING, DLanguageTypes.GROUP_STRING);
        tokens.put(DeeTokens.IDENTIFIER, DLanguageTypes.IDENTIFIER);
        tokens.put(DeeTokens.INCREMENT, DLanguageTypes.INCREMENT);
        tokens.put(DeeTokens.INTEGER_BINARY, DLanguageTypes.INTEGER_BINARY);
        tokens.put(DeeTokens.INTEGER_DECIMAL, DLanguageTypes.INTEGER_DECIMAL);
        tokens.put(DeeTokens.INTEGER_HEX, DLanguageTypes.INTEGER_HEX);
        tokens.put(DeeTokens.INTEGER_OCTAL, DLanguageTypes.INTEGER_OCTAL);
        tokens.put(DeeTokens.INVALID_TOKEN, DLanguageTypes.INVALID_TOKEN);
        tokens.put(DeeTokens.KW_ABSTRACT, DLanguageTypes.KW_ABSTRACT);
        tokens.put(DeeTokens.KW_ALIAS, DLanguageTypes.KW_ALIAS);
        tokens.put(DeeTokens.KW_ALIGN, DLanguageTypes.KW_ALIGN);
        tokens.put(DeeTokens.KW_ASM, DLanguageTypes.KW_ASM);
        tokens.put(DeeTokens.KW_ASSERT, DLanguageTypes.KW_ASSERT);
        tokens.put(DeeTokens.KW_AUTO, DLanguageTypes.KW_AUTO);
        tokens.put(DeeTokens.KW_BODY, DLanguageTypes.KW_BODY);
        tokens.put(DeeTokens.KW_BOOL, DLanguageTypes.KW_BOOL);
        tokens.put(DeeTokens.KW_BREAK, DLanguageTypes.KW_BREAK);
        tokens.put(DeeTokens.KW_BYTE, DLanguageTypes.KW_BYTE);
        tokens.put(DeeTokens.KW_CASE, DLanguageTypes.KW_CASE);
        tokens.put(DeeTokens.KW_CAST, DLanguageTypes.KW_CAST);
        tokens.put(DeeTokens.KW_CATCH, DLanguageTypes.KW_CATCH);
        tokens.put(DeeTokens.KW_CDOUBLE, DLanguageTypes.KW_CDOUBLE);
        tokens.put(DeeTokens.KW_CENT, DLanguageTypes.KW_CENT);
        tokens.put(DeeTokens.KW_CFLOAT, DLanguageTypes.KW_CFLOAT);
        tokens.put(DeeTokens.KW_CHAR, DLanguageTypes.KW_CHAR);
        tokens.put(DeeTokens.KW_CLASS, DLanguageTypes.KW_CLASS);
        tokens.put(DeeTokens.KW_CONST, DLanguageTypes.KW_CONST);
        tokens.put(DeeTokens.KW_CONTINUE, DLanguageTypes.KW_CONTINUE);
        tokens.put(DeeTokens.KW_CREAL, DLanguageTypes.KW_CREAL);
        tokens.put(DeeTokens.KW_DCHAR, DLanguageTypes.KW_DCHAR);
        tokens.put(DeeTokens.KW_DEBUG, DLanguageTypes.KW_DEBUG);
        tokens.put(DeeTokens.KW_DEFAULT, DLanguageTypes.KW_DEFAULT);
        tokens.put(DeeTokens.KW_DELEGATE, DLanguageTypes.KW_DELEGATE);
        tokens.put(DeeTokens.KW_DELETE, DLanguageTypes.KW_DELETE);
        tokens.put(DeeTokens.KW_DEPRECATED, DLanguageTypes.KW_DEPRECATED);
        tokens.put(DeeTokens.KW_DO, DLanguageTypes.KW_DO);
        tokens.put(DeeTokens.KW_DOUBLE, DLanguageTypes.KW_DOUBLE);
        tokens.put(DeeTokens.KW_ELSE, DLanguageTypes.KW_ELSE);
        tokens.put(DeeTokens.KW_ENUM, DLanguageTypes.KW_ENUM);
        tokens.put(DeeTokens.KW_EXPORT, DLanguageTypes.KW_EXPORT);
        tokens.put(DeeTokens.KW_EXTERN, DLanguageTypes.KW_EXTERN);
        tokens.put(DeeTokens.KW_FALSE, DLanguageTypes.KW_FALSE);
        tokens.put(DeeTokens.KW_FINAL, DLanguageTypes.KW_FINAL);
        tokens.put(DeeTokens.KW_FINALLY, DLanguageTypes.KW_FINALLY);
        tokens.put(DeeTokens.KW_FLOAT, DLanguageTypes.KW_FLOAT);
        tokens.put(DeeTokens.KW_FOR, DLanguageTypes.KW_FOR);
        tokens.put(DeeTokens.KW_FOREACH, DLanguageTypes.KW_FOREACH);
        tokens.put(DeeTokens.KW_FOREACH_REVERSE, DLanguageTypes.KW_FOREACH_REVERSE);
        tokens.put(DeeTokens.KW_FUNCTION, DLanguageTypes.KW_FUNCTION);
        tokens.put(DeeTokens.KW_GOTO, DLanguageTypes.KW_GOTO);
        tokens.put(DeeTokens.KW_IDOUBLE, DLanguageTypes.KW_IDOUBLE);
        tokens.put(DeeTokens.KW_IF, DLanguageTypes.KW_IF);
        tokens.put(DeeTokens.KW_IFLOAT, DLanguageTypes.KW_IFLOAT);
        tokens.put(DeeTokens.KW_IMMUTABLE, DLanguageTypes.KW_IMMUTABLE);
        tokens.put(DeeTokens.KW_IMPORT, DLanguageTypes.KW_IMPORT);
        tokens.put(DeeTokens.KW_IN, DLanguageTypes.KW_IN);
        tokens.put(DeeTokens.KW_INOUT, DLanguageTypes.KW_INOUT);
        tokens.put(DeeTokens.KW_INT, DLanguageTypes.KW_INT);
        tokens.put(DeeTokens.KW_INTERFACE, DLanguageTypes.KW_INTERFACE);
        tokens.put(DeeTokens.KW_INVARIANT, DLanguageTypes.KW_INVARIANT);
        tokens.put(DeeTokens.KW_IREAL, DLanguageTypes.KW_IREAL);
        tokens.put(DeeTokens.KW_IS, DLanguageTypes.KW_IS);
        tokens.put(DeeTokens.KW_LAZY, DLanguageTypes.KW_LAZY);
        tokens.put(DeeTokens.KW_LONG, DLanguageTypes.KW_LONG);
        tokens.put(DeeTokens.KW_MACRO, DLanguageTypes.KW_MACRO);
        tokens.put(DeeTokens.KW_MIXIN, DLanguageTypes.KW_MIXIN);
        tokens.put(DeeTokens.KW_MODULE, DLanguageTypes.KW_MODULE);
        tokens.put(DeeTokens.KW_NEW, DLanguageTypes.KW_NEW);
        tokens.put(DeeTokens.KW_NOTHROW, DLanguageTypes.KW_NOTHROW);
        tokens.put(DeeTokens.KW_NULL, DLanguageTypes.KW_NULL);
        tokens.put(DeeTokens.KW_OUT, DLanguageTypes.KW_OUT);
        tokens.put(DeeTokens.KW_OVERRIDE, DLanguageTypes.KW_OVERRIDE);
        tokens.put(DeeTokens.KW_PACKAGE, DLanguageTypes.KW_PACKAGE);
        tokens.put(DeeTokens.KW_PRAGMA, DLanguageTypes.KW_PRAGMA);
        tokens.put(DeeTokens.KW_PRIVATE, DLanguageTypes.KW_PRIVATE);
        tokens.put(DeeTokens.KW_PROTECTED, DLanguageTypes.KW_PROTECTED);
        tokens.put(DeeTokens.KW_PUBLIC, DLanguageTypes.KW_PUBLIC);
        tokens.put(DeeTokens.KW_PURE, DLanguageTypes.KW_PURE);
        tokens.put(DeeTokens.KW_REAL, DLanguageTypes.KW_REAL);
        tokens.put(DeeTokens.KW_REF, DLanguageTypes.KW_REF);
        tokens.put(DeeTokens.KW_RETURN, DLanguageTypes.KW_RETURN);
        tokens.put(DeeTokens.KW_SCOPE, DLanguageTypes.KW_SCOPE);
        tokens.put(DeeTokens.KW_SHARED, DLanguageTypes.KW_SHARED);
        tokens.put(DeeTokens.KW_SHORT, DLanguageTypes.KW_SHORT);
        tokens.put(DeeTokens.KW_STATIC, DLanguageTypes.KW_STATIC);
        tokens.put(DeeTokens.KW_STRUCT, DLanguageTypes.KW_STRUCT);
        tokens.put(DeeTokens.KW_SUPER, DLanguageTypes.KW_SUPER);
        tokens.put(DeeTokens.KW_SWITCH, DLanguageTypes.KW_SWITCH);
        tokens.put(DeeTokens.KW_SYNCHRONIZED, DLanguageTypes.KW_SYNCHRONIZED);
        tokens.put(DeeTokens.KW_TEMPLATE, DLanguageTypes.KW_TEMPLATE);
        tokens.put(DeeTokens.KW_THIS, DLanguageTypes.KW_THIS);
        tokens.put(DeeTokens.KW_THROW, DLanguageTypes.KW_THROW);
        tokens.put(DeeTokens.KW_TRUE, DLanguageTypes.KW_TRUE);
        tokens.put(DeeTokens.KW_TRY, DLanguageTypes.KW_TRY);
        tokens.put(DeeTokens.KW_TYPEDEF, DLanguageTypes.KW_TYPEDEF);
        tokens.put(DeeTokens.KW_TYPEID, DLanguageTypes.KW_TYPEID);
        tokens.put(DeeTokens.KW_TYPEOF, DLanguageTypes.KW_TYPEOF);
        tokens.put(DeeTokens.KW_UBYTE, DLanguageTypes.KW_UBYTE);
        tokens.put(DeeTokens.KW_UCENT, DLanguageTypes.KW_UCENT);
        tokens.put(DeeTokens.KW_UINT, DLanguageTypes.KW_UINT);
        tokens.put(DeeTokens.KW_ULONG, DLanguageTypes.KW_ULONG);
        tokens.put(DeeTokens.KW_UNION, DLanguageTypes.KW_UNION);
        tokens.put(DeeTokens.KW_UNITTEST, DLanguageTypes.KW_UNITTEST);
        tokens.put(DeeTokens.KW_USHORT, DLanguageTypes.KW_USHORT);
        tokens.put(DeeTokens.KW_VERSION, DLanguageTypes.KW_VERSION);
        tokens.put(DeeTokens.KW_VOID, DLanguageTypes.KW_VOID);
        tokens.put(DeeTokens.KW_VOLATILE, DLanguageTypes.KW_VOLATILE);
        tokens.put(DeeTokens.KW_WCHAR, DLanguageTypes.KW_WCHAR);
        tokens.put(DeeTokens.KW_WHILE, DLanguageTypes.KW_WHILE);
        tokens.put(DeeTokens.KW_WITH, DLanguageTypes.KW_WITH);
        tokens.put(DeeTokens.KW___DATE__, DLanguageTypes.KW___DATE__);
        tokens.put(DeeTokens.KW___FILE__, DLanguageTypes.KW___FILE__);
        tokens.put(DeeTokens.KW___FUNCTION__, DLanguageTypes.KW___FUNCTION__);
        tokens.put(DeeTokens.KW___GSHARED, DLanguageTypes.KW___GSHARED);
        tokens.put(DeeTokens.KW___LINE__, DLanguageTypes.KW___LINE__);
        tokens.put(DeeTokens.KW___MODULE__, DLanguageTypes.KW___MODULE__);
        tokens.put(DeeTokens.KW___PRETTY_FUNCTION__, DLanguageTypes.KW___PRETTY_FUNCTION__);
        tokens.put(DeeTokens.KW___THREAD, DLanguageTypes.KW___THREAD);
        tokens.put(DeeTokens.KW___TIMESTAMP__, DLanguageTypes.KW___TIMESTAMP__);
        tokens.put(DeeTokens.KW___TIME__, DLanguageTypes.KW___TIME__);
        tokens.put(DeeTokens.KW___TRAITS, DLanguageTypes.KW___TRAITS);
        tokens.put(DeeTokens.KW___VECTOR, DLanguageTypes.KW___VECTOR);
        tokens.put(DeeTokens.KW___VENDOR__, DLanguageTypes.KW___VENDOR__);
        tokens.put(DeeTokens.KW___VERSION__, DLanguageTypes.KW___VERSION__);
        tokens.put(DeeTokens.LAMBDA, DLanguageTypes.LAMBDA);
        tokens.put(DeeTokens.LEFT_SHIFT, DLanguageTypes.LEFT_SHIFT);
        tokens.put(DeeTokens.LEFT_SHIFT_ASSIGN, DLanguageTypes.LEFT_SHIFT_ASSIGN);
        tokens.put(DeeTokens.LESS_EQUAL, DLanguageTypes.LESS_EQUAL);
        tokens.put(DeeTokens.LESS_GREATER, DLanguageTypes.LESS_GREATER);
        tokens.put(DeeTokens.LESS_GREATER_EQUAL, DLanguageTypes.LESS_GREATER_EQUAL);
        tokens.put(DeeTokens.LESS_THAN, DLanguageTypes.LESS_THAN);
        tokens.put(DeeTokens.LINE_END, DLanguageTypes.LINE_END);
        tokens.put(DeeTokens.LOGICAL_AND, DLanguageTypes.LOGICAL_AND);
        tokens.put(DeeTokens.LOGICAL_OR, DLanguageTypes.LOGICAL_OR);
        tokens.put(DeeTokens.MINUS, DLanguageTypes.MINUS);
        tokens.put(DeeTokens.MINUS_ASSIGN, DLanguageTypes.MINUS_ASSIGN);
        tokens.put(DeeTokens.MOD, DLanguageTypes.MOD);
        tokens.put(DeeTokens.MOD_ASSIGN, DLanguageTypes.MOD_ASSIGN);
        tokens.put(DeeTokens.MULT_ASSIGN, DLanguageTypes.MULT_ASSIGN);
        tokens.put(DeeTokens.NOT, DLanguageTypes.NOT);
        tokens.put(DeeTokens.NOT_EQUAL, DLanguageTypes.NOT_EQUAL);
        tokens.put(DeeTokens.OPEN_BRACE, DLanguageTypes.OPEN_BRACE);
        tokens.put(DeeTokens.OPEN_BRACKET, DLanguageTypes.OPEN_BRACKET);
        tokens.put(DeeTokens.OPEN_PARENS, DLanguageTypes.OPEN_PARENS);
        tokens.put(DeeTokens.OR, DLanguageTypes.OR);
        tokens.put(DeeTokens.OR_ASSIGN, DLanguageTypes.OR_ASSIGN);
        tokens.put(DeeTokens.PLUS, DLanguageTypes.PLUS);
        tokens.put(DeeTokens.PLUS_ASSIGN, DLanguageTypes.PLUS_ASSIGN);
        tokens.put(DeeTokens.POW, DLanguageTypes.POW);
        tokens.put(DeeTokens.POW_ASSIGN, DLanguageTypes.POW_ASSIGN);
        tokens.put(DeeTokens.QUESTION, DLanguageTypes.QUESTION);
        tokens.put(DeeTokens.RIGHT_SHIFT, DLanguageTypes.RIGHT_SHIFT);
        tokens.put(DeeTokens.RIGHT_SHIFT_ASSIGN, DLanguageTypes.RIGHT_SHIFT_ASSIGN);
        tokens.put(DeeTokens.SCRIPT_LINE_INTRO, DLanguageTypes.SCRIPT_LINE_INTRO);
        tokens.put(DeeTokens.SEMICOLON, DLanguageTypes.SEMICOLON);
        tokens.put(DeeTokens.SPECIAL_TOKEN_LINE, DLanguageTypes.SPECIAL_TOKEN_LINE);
        tokens.put(DeeTokens.STAR, DLanguageTypes.STAR);
        tokens.put(DeeTokens.STRING_DELIM, DLanguageTypes.STRING_DELIM);
        tokens.put(DeeTokens.STRING_DQ, DLanguageTypes.STRING_DQ);
        tokens.put(DeeTokens.STRING_HEX, DLanguageTypes.STRING_HEX);
        tokens.put(DeeTokens.STRING_TOKENS, DLanguageTypes.STRING_TOKENS);
        tokens.put(DeeTokens.STRING_WYSIWYG, DLanguageTypes.STRING_WYSIWYG);
        tokens.put(DeeTokens.TRIPLE_DOT, DLanguageTypes.TRIPLE_DOT);
        tokens.put(DeeTokens.TRIPLE_RSHIFT, DLanguageTypes.TRIPLE_RSHIFT);
        tokens.put(DeeTokens.TRIPLE_RSHIFT_ASSIGN, DLanguageTypes.TRIPLE_RSHIFT_ASSIGN);
        tokens.put(DeeTokens.UNORDERED, DLanguageTypes.UNORDERED);
        tokens.put(DeeTokens.UNORDERED_E, DLanguageTypes.UNORDERED_E);
        tokens.put(DeeTokens.UNORDERED_G, DLanguageTypes.UNORDERED_G);
        tokens.put(DeeTokens.UNORDERED_GE, DLanguageTypes.UNORDERED_GE);
        tokens.put(DeeTokens.UNORDERED_L, DLanguageTypes.UNORDERED_L);
        tokens.put(DeeTokens.UNORDERED_LE, DLanguageTypes.UNORDERED_LE);
        tokens.put(DeeTokens.WHITESPACE, DLanguageTypes.WHITESPACE);
        tokens.put(DeeTokens.XOR, DLanguageTypes.XOR);
        tokens.put(DeeTokens.XOR_ASSIGN, DLanguageTypes.XOR_ASSIGN);
        IElementType found = tokens.get(token);
        return (found == null) ? new DLanguageElementType(token.name()) : found;
    }

}
